{
  "config_name": "Identify gateway relationships between task pairs based on requirements and control flow",
  "input_variables": {
    "REQUIREMENT": "Default requirement: User submits order, system processes it.",
    "PAIRS": [
      {
        "type": "convergent",
        "from_tasks": [
          "E2-r1",
          "T2"
        ],
        "to_task": "E2"
      }
    ],
    "FORMATTASK": "{\n  \"actor\": [\n    {\n      \"actor_name\": \"User\",\n      \"symbol\": \"A\"\n    },\n    {\n      \"actor_name\": \"System\",\n      \"symbol\": \"B\"\n    }\n  ],\n  \"tasks\": [\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"User submits order\",\n      \"task_symbol\": \"T1\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"System processes the order\",\n      \"task_symbol\": \"T2\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"initial of User\",\n      \"task_symbol\": \"S1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"end of User\",\n      \"task_symbol\": \"E1\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"initial of System\",\n      \"task_symbol\": \"S2\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"end of System\",\n      \"task_symbol\": \"E2\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"semantic_relation_label\": \"T1-related\",\n      \"task_symbol\": \"T2-r1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"semantic_relation_label\": \"S2-related\",\n      \"task_symbol\": \"S1-r1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"semantic_relation_label\": \"E2-related\",\n      \"task_symbol\": \"E1-r1\"\n    }\n  ],\n  \"task_types\": [\n    {\n      \"task_symbol\": \"T1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"T2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"S1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"E1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"S2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"E2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"T2-r1\",\n      \"message_receiver\": \"T2\"\n    },\n    {\n      \"task_symbol\": \"S1-r1\",\n      \"message_receiver\": \"S1\"\n    },\n    {\n      \"task_symbol\": \"E1-r1\",\n      \"message_receiver\": \"E1\"\n    }\n  ]\n}"
  },
  "full_prompt": "Task: Identify gateway relationships between task pairs based on requirements and control flow\n\nInput variables:\nREQUIREMENT: Default requirement: User submits order, system processes it.\nPAIRS: [\n  {\n    \"type\": \"convergent\",\n    \"from_tasks\": [\n      \"E2-r1\",\n      \"T2\"\n    ],\n    \"to_task\": \"E2\"\n  }\n]\nFORMATTASK: {\n  \"actor\": [\n    {\n      \"actor_name\": \"User\",\n      \"symbol\": \"A\"\n    },\n    {\n      \"actor_name\": \"System\",\n      \"symbol\": \"B\"\n    }\n  ],\n  \"tasks\": [\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"User submits order\",\n      \"task_symbol\": \"T1\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"System processes the order\",\n      \"task_symbol\": \"T2\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"initial of User\",\n      \"task_symbol\": \"S1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"task_description\": \"end of User\",\n      \"task_symbol\": \"E1\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"initial of System\",\n      \"task_symbol\": \"S2\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"task_description\": \"end of System\",\n      \"task_symbol\": \"E2\"\n    },\n    {\n      \"actor_symbol\": \"B\",\n      \"semantic_relation_label\": \"T1-related\",\n      \"task_symbol\": \"T2-r1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"semantic_relation_label\": \"S2-related\",\n      \"task_symbol\": \"S1-r1\"\n    },\n    {\n      \"actor_symbol\": \"A\",\n      \"semantic_relation_label\": \"E2-related\",\n      \"task_symbol\": \"E1-r1\"\n    }\n  ],\n  \"task_types\": [\n    {\n      \"task_symbol\": \"T1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"T2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"S1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"E1\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"S2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"E2\",\n      \"task_type\": \"action\"\n    },\n    {\n      \"task_symbol\": \"T2-r1\",\n      \"message_receiver\": \"T2\"\n    },\n    {\n      \"task_symbol\": \"S1-r1\",\n      \"message_receiver\": \"S1\"\n    },\n    {\n      \"task_symbol\": \"E1-r1\",\n      \"message_receiver\": \"E1\"\n    }\n  ]\n}\n\nAnalyze the given REQUIREMENT and PAIRS (extracted from control flow) to identify both flat and nested gateway relationships. Assign a unique symbol (e.g., G1, G2, ...) to each gateway and determine its type. A gateway may reference either tasks or other gateways as its source (from_tasks) or target (to_tasks).\n\nConversion Rules for Gateway Types:\n\nParallel Gateways:\n- Parallel-Divergent: one from_task → multiple to_task (all paths are followed)\n- Parallel-Convergent: multiple from_task → one to_task (all paths must complete)\n\nInclusive Gateways:\n- Inclusive-Divergent: one from_task → multiple to_task (some or all paths may be followed)\n- Inclusive-Convergent: multiple from_task → one to_task (all active paths must complete)\n\nExclusive Gateways:\n- Exclusive-Divergent: one from_task → multiple to_task (only one path is chosen)\n- Exclusive-Convergent: multiple from_task → one to_task (one of several paths proceeds)\n\nIntersection of Gateways:\nIf two gateways share the same from_task and to_task:\n- Parallel gateways take precedence.\n- If both are parallel or both are inclusive/exclusive, convergent gateways take precedence over divergent gateways.\n\nUpdate logic:\n- Replace the common to_task of the higher-priority gateway with the symbol of the lower-priority gateway.\n- Replace the common from_task of the lower-priority gateway with the symbol of the higher-priority gateway.\n\nIMPORTANT: Output ONLY valid JSON format. Do not include any comments, explanations, or markdown formatting within the JSON structure.\n\nOutput format requirements:\n- gateways: JSON array format: each element is an object with fields: {\"gateway_symbol\": string, \"gateway_type\": string, \"from_tasks\": array of strings, \"to_tasks\": array of strings}. Gateway symbols (e.g., G1) may appear in from_tasks or to_tasks to support nested structures.\n- gateway_types:\n  - Parallel: {'Parallel-Divergent': 'one from_task -> multiple to_task', 'Parallel-Convergent': 'multiple from_task -> one to_task'}\n  - Inclusive: {'Inclusive-Divergent': 'one from_task -> multiple to_task (conditional)', 'Inclusive-Convergent': 'multiple from_task -> one to_task (after completion)'}\n  - Exclusive: {'Exclusive-Divergent': 'one from_task -> multiple to_task (single path)', 'Exclusive-Convergent': 'multiple from_task -> one to_task (token passing)'}\n- precedence_rules: parallel_gateways_take_precedence, convergent_gateways_take_precedence_over_divergent\n- symbol_pattern: G<number>\n",
  "llm_response": "{\n  \"gateways\": [\n    {\n      \"gateway_symbol\": \"G1\",\n      \"gateway_type\": \"Parallel-Convergent\",\n      \"from_tasks\": [\n        \"T2-r1\",\n        \"T2\"\n      ],\n      \"to_tasks\": [\n        \"E2\"\n      ]\n    }\n  ],\n  \"gateway_types\": {\n    \"Parallel\": {\n      \"Parallel-Divergent\": \"one from_task -> multiple to_task\",\n      \"Parallel-Convergent\": \"multiple from_task -> one to_task\"\n    },\n    \"Inclusive\": {\n      \"Inclusive-Divergent\": \"one from_task -> multiple to_task (conditional)\",\n      \"Inclusive-Convergent\": \"multiple from_task -> one to_task (after completion)\"\n    },\n    \"Exclusive\": {\n      \"Exclusive-Divergent\": \"one from_task -> multiple to_task (single path)\",\n      \"Exclusive-Convergent\": \"multiple from_task -> one to_task (token passing)\"\n    }\n  },\n  \"precedence_rules\": {\n    \"parallel_gateways_take_precedence\": true,\n    \"convergent_gateways_take_precedence_over_divergent\": true\n  },\n  \"symbol_pattern\": \"G<number>\"\n}",
  "extracted_output": {
    "gateways": [
      {
        "gateway_symbol": "G1",
        "gateway_type": "Parallel-Convergent",
        "from_tasks": [
          "T2-r1",
          "T2"
        ],
        "to_tasks": [
          "E2"
        ]
      }
    ]
  }
}